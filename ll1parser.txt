LL(1) Parser:
#include<stdio.h>
#include<stdlib.h>
char l[20]={'E','G','G','T','U','U','F','F'};
char r[20][20]={"TG","+TG","@","FU","*FU","@","(E)","i"};
char x[5]={'E','G','T','U','F'};
char y[7]={'i','+','*',’@’,'(',')','$'};
int tab[5][7],np[10],ra=100,z;
static char temp[10];
char ch[20],t1[10];
int i,j,k=0,m,n,p,h,m1,b=0;
void FIRST(char);
void FOLLOW(char);
int main()
{

    printf("\n\n THE GRAMMER IS...:\n\n");
    for(i=0;i<8;i++)
    {
         printf("%c----->",l[i]);
         for(j=0;j<4;j++)
            printf("%c",r[i][j]);
         printf("\n");
    }
    for(p=0;p<5;p++)
    {
        for(m=0;m<8;m++)
        {   if(x[p]==l[m])
            {
                n=m;
                break;
            }
        }
        k=0;ra=100;z=0;
        FIRST(x[p]);
        for(j=0;j<k;j++)
        {
             for(h=0;h<7;h++)
             {
                 if(temp[j]==y[h]&&j<ra)
                 {
                      tab[p][h]=n+1;
                      if(r[n][0]==temp[j])
                           tab[p][h]=n+1;
                      else if(r[n+1][0]==temp[j])
                           tab[p][h]=n+2;
                 }
                 if(temp[j]==y[h]&&j>=ra)
                 {
                      tab[p][h]=n+2;
                      if(r[n][0]==temp[j])
                           tab[p][h]=n+2;
                      else if(r[n+1][0]==temp[j])
                           tab[p][h]=n+3;
                 }
             }
        }
    }
    printf("\n");
    for(i=0;i<7;i++)
        printf("\t %c",y[i]);
    for(i=0;i<5;i++)
    {
        printf("\n\t %c",x[i]);
        for(j=0;j<7;j++)
            printf("%d \t",tab[i][j]);
    }

    return 0;
}
void FOLLOW(char c)
{
    for(i=0;i<8;i++)
    {
       for(j=0;j<8;j++)
       {
          if(c==r[i][j])
          {
             if(r[i][j+1]>='A' && r[i][j+1]<='Z')
                 FIRST(r[i][j+1]);
             else if(r[i][j+1]=='\0')
                 FOLLOW(l[i]);
             else
             {
                 temp[k]=r[i][j+1];
                 k++;
             }
          }
       }
    }
    if(c==l[0])
    {
        temp[k]='$';
        k++;
    }
}
void FIRST(char c)
{
    for(i=0;i<20;i++)
    {
        if(c==l[i])
        {
            if(r[i][0]>='A' && r[i][0]<='Z')
                  FIRST(r[i][0]);
            else if(r[i][0]=='@')
            {
                  if(z==0)
                  {
                      ra=k;
                      z++;
                  }
                  FOLLOW(l[i]);
            }
        }
        else
        {
                  temp[k]=r[i][0];
                  k++;
        }
    }}

Input / Output:
 THE GRAMMER IS...:

E----->TG
G----->+TG
G----->@
T----->FU
U----->*FU
U----->@
F----->(E)
F----->i

         i       +       *     @     (        )       $
         E0     2       1       1    0       0       0
         G0     0       0       0    0       3       3
         T0     4       5       4    0       0       0
         U0     5       0       6    0       6       6
         F0     7       7       7    0       0       0


